import os
import librosa
import soundfile as sf
import numpy as np

# Function to split audio into chunks and save chunk counts
def split_audio(input_dir, output_dir, chunk_duration=5):
    # Create the output directory if it doesn't exist
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # List all audio files in the input directory
    audio_files = [f for f in os.listdir(input_dir) if f.endswith(('.mp3', '.wav', '.flac'))]

    # Initialize an empty list to store the number of chunks for each file
    chunk_counts = []

    # Iterate over each audio file in the directory
    for audio_file in audio_files:
        input_audio_path = os.path.join(input_dir, audio_file)

        # Load the audio file using librosa
        y, sr = librosa.load(input_audio_path, sr=None)

        # Calculate the total duration of the audio in seconds
        total_duration = librosa.get_duration(y=y, sr=sr)

        # Calculate the number of chunks
        num_chunks = int(total_duration // chunk_duration)
        chunk_counts.append(num_chunks)

        # Split the audio into chunks
        for i in range(num_chunks):
            start_sample = i * chunk_duration * sr
            end_sample = (i + 1) * chunk_duration * sr

            # Extract the chunk
            chunk = y[int(start_sample):int(end_sample)]

            # Generate the chunk filename
            chunk_filename = os.path.join(output_dir, f'{audio_file}_chunk_{i + 1}.wav')

            # Save the chunk as a WAV file
            sf.write(chunk_filename, chunk, sr)

        # If there's any leftover audio at the end (less than the chunk duration)
        if total_duration % chunk_duration != 0:
            start_sample = num_chunks * chunk_duration * sr
            chunk = y[int(start_sample):]

            # Save the last chunk
            chunk_filename = os.path.join(output_dir, f'{audio_file}_chunk_{num_chunks + 1}.wav')
            sf.write(chunk_filename, chunk, sr)
            chunk_counts[-1] += 1  # Increase the chunk count by 1 for this file

    # Convert the list of chunk counts to a NumPy array
    chunk_counts_array = np.array(chunk_counts)

    # Save the chunk counts array to a text file in the output directory
    chunk_counts_filename = os.path.join(output_dir, 'chunk_counts.txt')
    np.savetxt(chunk_counts_filename, chunk_counts_array, fmt='%d', header='Chunk counts for each file')

    print(f"Audio files split into chunks and saved in: {output_dir}")
    print(f"Chunk counts for each file: {chunk_counts_array}")
    print(f"Chunk counts saved to: {chunk_counts_filename}")

    return chunk_counts_array

# Example usage
input_dir = r'C:\Users\aksha\Deep Learning Labs\MHA Project\Hindi_Audio_Datasets\archive\Sample_911'  # Directory containing multiple audio files
output_dir = r'C:\Users\aksha\Deep Learning Labs\Splitted_Audio_Chunks'  # Output directory for the audio chunks
chunk_counts_array = split_audio(input_dir, output_dir)
